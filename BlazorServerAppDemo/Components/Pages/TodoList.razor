@page "/todo"
@inject BlazorServerAppDemo.Services.ITodoService TodoService

<h3>Todo List</h3>
<p class="text-secondary">
    Below input text box has a databinding using @@bind attribute.
    This enables two way databinding between the input control and the "textNewTodo" property.
</p>
<p>
    This setup demonstrates:

    Component Architecture: Creating and routing between components with data-binding.
    Service Layer: Implementing a service for managing Todo items.
    Dependency Injection: Registering and injecting services.
</p>
<hr />

@page "/todolist"
@using BlazorServerAppDemo.Models

<h3>Todo List</h3>
<input @bind="newTodoTitle" placeholder="New todo" />
<button @onclick="AddTodo" class="btn btn-sm btn-primary">Add</button>

@foreach (var item in TodoService.GetTodos())
{
    <TodoItem Title="@item.Title" IsComplete="@item.IsComplete" OnRemove="@(() => RemoveTodoItem(item))" OnCompleteChanged="@((isComplete) => MarkAsComplete(item, isComplete))" />
}


@code {
    private string newTodoTitle;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodoTitle))
        {
            TodoService.AddTodoItem(new TodoItemModel { Title = newTodoTitle });
            newTodoTitle = string.Empty;
        }
    }

    private void RemoveTodoItem(TodoItemModel item)
    {
        TodoService.RemoveTodoItem(item.Id);
    }

    private void MarkAsComplete(TodoItemModel item, bool isComplete)
    {
        TodoService.ToggleTodoItem(item.Id, isComplete);
    }
}
